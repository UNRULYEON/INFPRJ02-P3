@using Microsoft.AspNetCore.Mvc.Rendering
@using Models
@model FilterOptions

@{
    ViewBag.Title = "Wat is de arbeidsdeelname per migratie achtergrond?";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm())
{
    if (@ViewData["Filters"] is FilterOptions filter)
    {
       
        
        @Html.DropDownListFor(m => m.Gender, filter.SelectedGender, "Geslacht", 
            new { id="Gender"}) <br>
                                                                                                  
        @Html.DropDownListFor(m => m.Age, filter.SelectedAge, "Leeftijd", 
            new { id="Age"}) <br>
        @Html.DropDownListFor(m => m.Criteria, filter.SelectedCriteria, "Criteria", 
            new { id="Crit"}) <br>
                                                                                                              
    }
    <input type="submit", value="Search">
}
<p id="Target"></p>
@{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.min.js" type="text/javascript"></script>
    <script src="http://code.jquery.com/jquery-1.10.1.min.js"></script>
    <script>
        $.ajaxSetup({
            async: false
        });
        var root = "@ViewData["root"]";
        var desc = @Html.Raw(Json.Serialize(ViewData["Description"]));
        var Gender = document.getElementById("Gender");
        var Age = document.getElementById("Age").value;
        var Crit = document.getElementById("Crit");
        var Background = document.getElementById("Background");
        var Background2 = document.getElementById("Background2");
        var filterdata = @Html.Raw(Json.Serialize(ViewData["filters"]));
        var values = [];
        var labels = [];
        var periodes = [];
        console.log(Crit);
        for (var key in desc) {
            if (desc[key].value == Crit.value)
                document.getElementById('Target').textContent = desc[key].text;
        }
        for (var entry in filterdata.selectedPeriod) {
            periodes[entry] = filterdata.selectedPeriod[entry].text;
        }
        function createQuerystring(arg) {
            var temp = root + "$filter=endswith(Perioden,'JJ00') eq true and " +
                "Leeftijd eq " + "'" + Age + "'" +
                " and " + "Geslacht eq " + "'" + Gender.value + "'" + 
                " and " + "Migratieachtergrond eq " + "'" + arg + "'";
            return temp;
        }
        for (var achtergrond in filterdata.selectedMigratieAchtergrond) {
            var one = $.get(
                createQuerystring(filterdata.selectedMigratieAchtergrond[achtergrond].value),
                function(data) {
                    var temp = [];
                    for (var entry in data.value) {
                        temp[entry] = data.value[entry][Crit.value];
                        }
                    values[achtergrond] = temp;
                    labels[achtergrond] = filterdata.selectedMigratieAchtergrond[achtergrond].text; 
                });
        }
        var barChartData = {
            labels: periodes,
            datasets: [{
                label: labels,
                backgroundColor: "#21166e ",
                borderColor: "#21166e ",
                borderWidth: 12,
                fill: false,
                fontSize: 48,
                data: values
            }]
        };
        console.log(values);
        window.onload = function() {
            var ctx1 = document.getElementById("barcanvas").getContext("2d");
            window.myBar = new Chart(ctx1,
                {
                    type: 'line',
                    data: {
                        labels: periodes,
                        datasets: [{
                                label: labels[0],
                                backgroundColor: "#21166e ",
                                borderColor: "#21166e ",
                                borderWidth: 3,
                                fill: false,
                                fontSize: 48,
                                data: values[0]
                            }, 
                            {    
                                label: labels[1],
                                backgroundColor: "#685ea8 ",
                                borderColor: "#685ea8 ",
                                borderWidth: 3,
                                fill: false,
                                fontSize: 48,
                                data: values[1]
                            }, 
                            {    
                                label: labels[2],
                                backgroundColor: "#f6ff00 ",
                                borderColor: "#f6ff00 ",
                                borderWidth: 3,
                                fill: false,
                                fontSize: 48,
                                data: values[2]
                            },
                            {    
                                label: labels[3],
                                backgroundColor: "#ed559c ",
                                borderColor: "#ed559c ",
                                borderWidth: 3,
                                fill: false,
                                fontSize: 48,
                                data: values[3]
                            }, 
                            {    
                                label: labels[4],
                                backgroundColor: "#81ff47 ",
                                borderColor: "#81ff47 ",
                                borderWidth: 3,
                                fill: false,
                                fontSize: 48,
                                data: values[4]
                            }]
                    
                    },
                    options:
                    {

                        legend: {
                            labels: {
                                // This more specific font property overrides the global property
                                fontSize: 20
                            }
                        },
                        tooltips: {
                            titleFontSize: 20,
                            bodyFontSize: 20
                        },
                        scales: {
                            yAxes: [{
                                ticks: {
                                    // Include a dollar sign in the ticks
                                    callback: function(value, index, values) {
                                        return '' + value;
                                    }
                                },
                                // Label Y-axis     
                                scaleLabel: {
                                    display: true,
                                    labelString: 'x1000'
                                },
                            }],

                        },
                        

                        
                        responsive: true,
                        maintainAspectRatio: true
                        
                    }
                });
        }
    </script>
}
<body>  
<div style="text-align: center" width = "25%" height ="25%">  
    <canvas id="barcanvas"></canvas>  
</div>  
<p></p>
</body>  
