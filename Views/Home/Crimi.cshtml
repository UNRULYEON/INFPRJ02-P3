@{
  ViewData["Title"] = "TODO";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

<style>
  #chart-container {
    display: inline-block;
    position: relative;
    margin: auto;
    height: 700px;
    width: 100%;
    z-index: 5;
  }

  .filter-container{
    width: 100%;
    height: auto;
    border: 1px solid black;
    border-radius: 5px;
    margin: 20px 0;
    padding: 0 20px 15px;
    display: flex;
    flex-direction: column;
  }

  .checkbox-container{
    display: flex;
    flex-direction: column;
    padding: 10px 20px 10px 0;
  }

  .chart-overlay{
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #FFFFFF;
    z-index: -10;
    text-align: center;
    font-weight: bold;
    font-size: 1.5em;
    opacity: 0;
    transition: all 0.25s ease-in-out;
  }

  .chart-overlay-active{
    z-index: 10 !important;
    opacity: 1;
    transition: opacity 0.25s ease-in-out;
  }

  #chart{
    width: 100% !important;
    height: 100% !important;
    background-color: #FFFFFF;
  }
  
  @@media screen and (max-width: 767px) {
    .filter-container{
        width: 100%;
    }
  }

  .spinner-wrapper {
    position: relative;
    width: 4em;
    height: 4em;
    border-radius: 100%;
    left: calc(50% - 2em);
    margin: 20px 0;
  }

  .spinner-wrapper::after {
    content: "";
    background: #fff;
    border-radius: 50%;
    width: 3em;
    height: 3em;
    position: absolute;
    top: 0.5em;
    left: 0.5em;
  } 

  .rotator {
    position: relative;
    width: 4em;
    border-radius: 4em;
    overflow: hidden;
    animation: rotate 2000ms infinite linear;
  }

  .rotator:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: #f2499d;
    border: 3px solid #fff;
    border-radius: 100%;
  }

  .inner-spin {
    background: #fff;
    height: 4em;
    width: 2em;
  }

  .inner-spin {
    animation: rotate-left 2500ms infinite cubic-bezier(0.445, 0.050, 0.550, 0.950);
    border-radius: 2em 0 0 2em;
    transform-origin: 2em 2em;
  }

  .inner-spin:last-child {
    animation: rotate-right 2500ms infinite cubic-bezier(0.445, 0.050, 0.550, 0.950);
    margin-top: -4em;
    border-radius: 0 2em 2em 0;
    float: right;
    transform-origin: 0 50%;
  }

  @@keyframes rotate-left {
    60%, 75%, 100% {
        transform: rotate(360deg);
      }
  }

  @@keyframes rotate {
    0% {
        transform: rotate(0);
      }
      100% {
        transform: rotate(360deg);
      }
  }

  @@keyframes rotate-right {
    0%, 25%, 45% {
        transform: rotate(0);
      }

      100% {
        transform: rotate(360deg);
      }
  }
</style>

<h1>TODO: VRAAG</h1>

<div class="filter-container">
  <h3>Filters</h3>
  <div style="display: flex; flex-direction: row;">
    <!-- TODO: Copy the div checkbox-container to add more checkboxes -->
    <!-- Every id should be unique -->
    <!-- The numbers in the onclick function should correspond with the number at the end of the id -->
    <!-- The id should match the for in the label -->
    <div class="checkbox-container">
      <div class="form-check">
        <input type="checkbox" class="form-check-input checkbox_class" id="checkbox1" onclick="checkboxTrigger(0)" checked>
        <label class="form-check-label" id="checkbox1Label" for="checkbox1" value="checkbox1">TODO</label>
      </div>
      <div class="form-check">
        <input type="checkbox" class="form-check-input checkbox_class" id="checkbox2" onclick="checkboxTrigger(1)">
        <label class="form-check-label" id="checkbox2Label" for="checkbox2" value="checkbox2">TODO</label>
      </div>
      <div class="form-check">
        <input type="checkbox" class="form-check-input checkbox_class" id="checkbox3" onclick="checkboxTrigger(2)">
        <label class="form-check-label" id="checkbox3Label" for="checkbox3" value="checkbox3">TODO</label>
      </div>
      <div class="form-check">
        <input type="checkbox" class="form-check-input checkbox_class" id="checkbox4" onclick="checkboxTrigger(3)">
        <label class="form-check-label" id="checkbox4Label" for="checkbox4" value="checkbox4">TODO</label>
      </div>
      <div class="form-check">
        <input type="checkbox" class="form-check-input checkbox_class" id="checkbox5" onclick="checkboxTrigger(4)">
        <label class="form-check-label" id="checkbox5Label" for="checkbox5" value="checkbox5">TODO</label>
      </div>
      <div class="form-check">
        <input type="checkbox" class="form-check-input checkbox_class" id="checkbox6" onclick="checkboxTrigger(5)">
        <label class="form-check-label" id="checkbox6Label" for="checkbox6" value="checkbox6">TODO</label>
      </div>
    </div>
  </div>
</div>

<div id="chart-container">
  <div class="chart-overlay chart-overlay-active">
    <div class="spinner-wrapper">
      <div class="rotator">
        <div class="inner-spin"></div>
        <div class="inner-spin"></div>
      </div>
    </div>
    <br/>
    Crunching data...
  </div>
  <canvas id="chart"></canvas>
</div>

<script>
  function toggleOverlay() {
  console.log('Toggling class');

    var element = document.querySelector('.chart-overlay');
    element.classList.toggle('chart-overlay-active');
  }

  function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }
</script>

<script>
  
  // Gets the reference to the canvas
  var ctx = document.getElementById("chart").getContext("2d");

  // Array for the checkboxes - TODO: This has to be the same amount as the checkboxes
  // First one is set to true so the chart is generated with at least one dataset
  var checkedBoxes = [true, false, false, false, false, false];

  // Empty arrays
  var labelArray = [];
  var datasetArray = [];
  // TODO: Add the data here. The array 'datasetArrayBar1' is the first bar that's red.
  var datasetArrayBar1 = [];
  var datasetArrayBar2 = [];


  // Creating an empty chart
  var chart = new Chart(ctx,{
    type: 'bar',
    data: {},
    options: {}
  });

  var data = {
    // Label that appears below the chart
    labels: labelArray,
    datasets: datasetArray
  };

  var options = {
    // Doesn't maintain the original aspect ratio when resizing
    maintainAspectRatio: false,
    barValueSpacing: 20,
    scales: {
      yAxes: [{
          ticks: {
            // Y-axis starts at zero
            beginAtZero: true
        },
        // Label Y-axis     
        scaleLabel: {
            display: true,
            labelString: 'TODO'
          }
      }]
    },
    // Animations
    animation: {
      duration: 2000
    },
    // Padding around the chart
    layout: {
      padding: {
        left: 0,
        right: 0,
        top: 0,
        bottom: 0
      }
    }
  };

  // This function creates a new chart with the data from the checkboxes which are set on true
  async function createChart(chart){
    // Destroyes and re-appends the canvas element in the container
    $('#chart').remove();
    $('#chart-container').append('<canvas id="chart"><canvas>');
    canvas = document.querySelector('#chart');
    ctx = canvas.getContext('2d');
    ctx.canvas.width = $('#chart').width(); 
    ctx.canvas.height = $('#chart').height();

    // Empty the arrays
    datasetArray.length = 0;
    labelArray.length = 0;
    datasetArrayBar1.length = 0;
    datasetArrayBar2.length = 0;

    // If you want to add more datasets, you can copy the comment which start with "Dataset n" and ends with the if statement and paste
    // it at the and of the previous dataset. The only thing that has to be changed is the data

    // Dataset 1 - Push dataset 1 to the array if the checkbox is true
    await sleep(500);
    if (checkedBoxes[0]){
      // TODO: this is the label that appears under the grouped bars
      labelArray.push("TODOBUURT1");

      // This code appends the number at the and of the array.
      // TODO: Enter here the correct data
      datasetArrayBar1[datasetArrayBar1.length] = 1;
      datasetArrayBar2[datasetArrayBar2.length] = 10;
      console.log("Pushed dataset 1");
    };

    // Dataset 2 - Push dataset 2 to the array if the checkbox is true
    await sleep(500);
    if (checkedBoxes[1]){
      // TODO: this is the label that appears under the grouped bars
      labelArray.push("TODOBUURT2");

      // This code appends the number at the and of the array.
      // TODO: Enter here the correct data
      datasetArrayBar1[datasetArrayBar1.length] = 2;
      datasetArrayBar2[datasetArrayBar2.length] = 11;
      console.log("Pushed dataset 2");
    };

    // Dataset 3 - Push dataset 3 to the array if the checkbox is true
    await sleep(500);
    if (checkedBoxes[2]){
      // TODO: this is the label that appears under the grouped bars
      labelArray.push("TODOBUURT3");

      // This code appends the number at the and of the array.
      // TODO: Enter here the correct data
      datasetArrayBar1[datasetArrayBar1.length] = 3;
      datasetArrayBar2[datasetArrayBar2.length] = 12;

      console.log("Pushed dataset 3");
    };

    // Dataset 4 - Push dataset 4 to the array if the checkbox is true
    await sleep(500);
    if (checkedBoxes[3]){
      // TODO: this is the label that appears under the grouped bars
      labelArray.push("TODOBUURT4");

      // This code appends the number at the and of the array.
      // TODO: Enter here the correct data
      datasetArrayBar1[datasetArrayBar1.length] = 4;
      datasetArrayBar2[datasetArrayBar2.length] = 13;

      console.log("Pushed dataset 5");
    };

    // Dataset 5 - Push dataset 5 to the array if the checkbox is true
    await sleep(500);
    if (checkedBoxes[4]){
      // TODO: this is the label that appears under the grouped bars
      labelArray.push("TODOBUURT5");

      // This code appends the number at the and of the array.
      // TODO: Enter here the correct data
      datasetArrayBar1[datasetArrayBar1.length] = 5;
      datasetArrayBar2[datasetArrayBar2.length] = 14;

      console.log("Pushed dataset 5");
    };

    // Dataset 6 - Push dataset 6 to the array if the checkbox is true
    await sleep(500);
    if (checkedBoxes[5]){
      // TODO: this is the label that appears under the grouped bars
      labelArray.push("TODOBUURT6");

      // This code appends the number at the and of the array.
      // TODO: Enter here the correct data
      datasetArrayBar1[datasetArrayBar1.length] = 6;
      datasetArrayBar2[datasetArrayBar2.length] = 15;
      console.log("Pushed dataset 6");
    };

    datasetArray.push({
      // TODO: This is the label that appears above the chart
      label: 'TODO1',
      data: datasetArrayBar1,
      // TODO: Change here the color for this bar
      backgroundColor: "red",
      borderWidth: 2
    });

    datasetArray.push({
      // TODO: This is the label that appears above the chart
      label: 'TODO2',
      data: datasetArrayBar2,
      // TODO: Change here the color for this bar
      backgroundColor: "blue",
      borderWidth: 2
    });


    console.log("Current array: ");
    console.log(datasetArray);

    await sleep(500);
    // Creates the new chart with the specified data
    var chart = new Chart(ctx,{
      type: 'bar',
      options: options,
      data: data
    });

    console.log("Created chart");

    // Re-enables the checkboxes
    await sleep(500);
    var cells = document.getElementsByClassName("checkbox_class"); 
    for (var i = 0; i < cells.length; i++) { 
        cells[i].disabled = false;
    }

    // Toggles the overlay so it becomes transparant again and with z-index: -10
    toggleOverlay();    
  };

  // Runs when a checkbox is checked or unchecked
  async function checkboxTrigger(c){

    // Toggle the overlay so the spinner becomes visible with z-index: 10
    toggleOverlay();

    // Disable checkboxes
    var cells = document.getElementsByClassName("checkbox_class"); 
    for (var i = 0; i < cells.length; i++) { 
        cells[i].disabled = true;
    }

    console.log("Checkbox number: " + ( c+1 ));
    console.log(checkedBoxes);

    if (checkedBoxes[c]){
      // Checkbox 1 - Unchecked
      checkedBoxes[c] = false;
      console.log(checkedBoxes);
    } else {
      // Checkbox 1 - Checked
      checkedBoxes[c] = true;
      console.log(checkedBoxes);
    };
    
    // Calls the funtion to create a new chart
    await sleep(500);
    // Destroy the old chart
    chart.destroy();
    console.log("Deleted chart");
    // Runs function create chart
    createChart(chart);
  };

  // When the page is loaded, run createChart so the chart with the base data is rendered
  document.onload = createChart();
</script>