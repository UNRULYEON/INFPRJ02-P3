<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js" </script>
    <script src="/js/my.js"></script>
</head>
@{
    ViewData["Title"] = "Recreatie";
}
<style>
    #chart-container {
        display: inline-block;
        position: relative;
        margin: auto;
        height: auto;
        width: 100%;
        z-index: 5;
    }

    .filter-container {
        width: 500px;
        height: auto;
        border: 1px solid black;
        border-radius: 5px;
        margin: 20px auto;
        padding: 0 20px 15px;
    }

    .chart-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #FFFFFF;
        z-index: -10;
        text-align: center;
        font-weight: bold;
        font-size: 1.5em;
        opacity: 0;
        transition: all 0.25s ease-in-out;
    }

    .chart-overlay-active {
        z-index: 10 !important;
        opacity: 1;
        transition: opacity 0.25s ease-in-out;
    }

    #chart {
        width: 100% !important;
        height: 100% !important;
        background-color: #FFFFFF;
    }

    @@media screen and (max-width: 767px) {
        .filter-container {
            width: 100%;
        }
    }

    .spinner {
        -webkit-animation: rotation 1.35s linear infinite;
        animation: rotation 1.35s linear infinite;
        margin: 20px 0;
    }

    @@-webkit-keyframes rotation {
        0% {
            -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(270deg);
            transform: rotate(270deg);
        }
    }

    @@keyframes rotation {
        0% {
            -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(270deg);
            transform: rotate(270deg);
        }
    }

    .circle {
        stroke-dasharray: 180;
        stroke-dashoffset: 0;
        -webkit-transform-origin: center;
        -ms-transform-origin: center;
        transform-origin: center;
        -webkit-animation: turn 1.35s ease-in-out infinite;
        animation: turn 1.35s ease-in-out infinite;
    }

    @@-webkit-keyframes turn {
        0% {
            stroke-dashoffset: 180;
        }

        50% {
            stroke-dashoffset: 45;
            -webkit-transform: rotate(135deg);
            transform: rotate(135deg);
        }

        100% {
            stroke-dashoffset: 180;
            -webkit-transform: rotate(450deg);
            transform: rotate(450deg);
        }
    }

    @@keyframes turn {
        0% {
            stroke-dashoffset: 180;
        }

        50% {
            stroke-dashoffset: 45;
            -webkit-transform: rotate(135deg);
            transform: rotate(135deg);
        }

        100% {
            stroke-dashoffset: 180;
            -webkit-transform: rotate(450deg);
            transform: rotate(450deg);
        }
    }

    svg {
        stroke: #f2499d;
    }
</style>

<h3>@ViewData["Title"]</h3>

<h1>Regio: Feijenoord</h1>
<h3>Rotterdam</h3>
<BR /><BR>

<div class="filter-container">
    <h3>Filters</h3>
    <p></p>
    <div class="form-check">
        <input type="checkbox" class="form-check-input" id="checkbox1" onclick="checkboxTrigger(0)">
        <label class="form-check-label" id="checkbox1Label" for="checkbox1" value="checkbox1">Warenhuis</label>
    </div>
    <div class="form-check">
        <input type="checkbox" class="form-check-input" id="checkbox2" onclick="checkboxTrigger(1)">
        <label class="form-check-label" id="checkbox2Label" for="checkbox2" value="checkbox2">Bibliotheek</label>
    </div>
    <div class="form-check">
        <input type="checkbox" class="form-check-input" id="checkbox3" onclick="checkboxTrigger(2)">
        <label class="form-check-label" id="checkbox3Label" for="checkbox3" value="checkbox3">Zwembad</label>
    </div>
</div>

<div id="chart-container">
    <div class="chart-overlay chart-overlay-active">
        <svg class="spinner" width="65px" height="65px" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg"><circle class="circle" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle></svg><br />
        Crunching data...
    </div>
    <canvas id="chart"></canvas>
</div>
<script>
    function toggleOverlay() {
        console.log('Toggling class');

        var element = document.querySelector('.chart-overlay');
        element.classList.toggle('chart-overlay-active');
    }

    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
</script>



<script>
    // Gets the reference to the canvas
    var ctx = document.getElementById("chart").getContext("2d");

    var checkedBoxes = [false, false, false];

    var chart = new Chart(ctx, {
        type: 'bar',
        data: {},
        options: {}
    });

    console.log(chart);

    // Data dataset 0
    // This dataset is the data from houseprices and street
    var datasetArray = [{
        label: 'Huisprijs',
        data: [11.5, 20],
        backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 99, 132, 0.2)',
        ],
        borderColor: [
            'rgba(255,99,132,1)',
            'rgba(255,99,132,1)',
        ],
        borderWidth: 2
    }]
    //hier zet je de straat namen
    var data = {
        labels: ['Afrikaanderwijk', 'Bloemhof', 'Feijenoord', 'Hillesluis', 'Katendrecht', ' Kop van Zuid', 'Kop van Zuid - Entrepot', 'Noordereiland', 'Vreewijk'],
        datasets: datasetArray
    };

    var options = {
        // Doesn't maintain the original aspect ratio when resizing
        maintainAspectRatio: false,
        scales: {
            xAxes: [{
                // Label X-axis
                scaleLabel: {
                    display: false,
                    //labelString: ''
                },
                stacked: true
            }],
            yAxes: [{
                ticks: {
                    // Y-axis starts at zero
                    beginAtZero: true,
                    // Maximum of the Y-axis
                    //max: 5,
                    // Minimum of the Y-axis
                    min: 0,
                    // How big the increment is
                    stepSize: 1
                },
                // Label Y-axis
                scaleLabel: {
                    display: true,
                    labelString: 'Gemiddelde woningwaarde in euro (x 10.000)'
                },
                stacked: false
            }]
        },
        // Animations
        animation: {
            duration: 0
        },
        // Padding around the chart
        layout: {
            padding: {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            }
        },
        tooltips: {
            enabled: true,
            titleFontSize: 16,
            bodyFontSize: 14,
            displayColors: false,
            yAlign: 'bottom'
        }
    };

    // This function creates a new chart with the data from the checkboxes which are set on true
    async function createChart() {

        var ctx = document.getElementById("chart").getContext("2d");

        console.log(chart);
        datasetArray.length = 1;

        await sleep(500);
        // Dataset 1 - Push dataset 1 to the array if the checkbox is true
        if (checkedBoxes[0]) {
            datasetArray.push({
                label: 'warenhuis',
                data: [1.00, 1.20, 1.10, 1.40, 1.70, 1.00, 0.60, 1.90, 1.50],
                backgroundColor: [
                    'rgba(0, 0, 0, 0)'
                ],
                borderColor: [
                    'rgba(255, 206, 86, 1)'
                ],
                borderWidth: 3,
                pointBackgroundColor: 'rgba(255, 255, 255, 1)',
                pointBorderColor: 'rgba(255, 206, 86, 1)',
                pointBorderWidth: 2,
                pointRadius: 5,
                pointHoverRadius: 7,
                type: 'line'
            });
            console.log("Pushed dataset 1");
        };

        await sleep(500);
        // Dataset 2 - Push dataset 1 to the array if the checkbox is true
        if (checkedBoxes[1]) {
            datasetArray.push({
                label: 'Bibliotheek',
                data: [1.70, 0.90, 2.60, 0.90, 3.00, 2.60, 2.30, 2.00, 0.90],
                backgroundColor: [
                    'rgba(0, 0, 0, 0)'
                ],
                borderColor: [
                    'rgba(255, 206, 86, 1)'
                ],
                borderWidth: 3,
                pointBackgroundColor: 'rgba(255, 255, 255, 1)',
                pointBorderColor: 'rgba(255, 206, 86, 1)',
                pointBorderWidth: 2,
                pointRadius: 5,
                pointHoverRadius: 7,
                type: 'line'

            });
            console.log("Pushed dataset 2");
        };

        await sleep(500);
        // Dataset 3 - Push dataset 1 to the array if the checkbox is true
        if (checkedBoxes[2]) {
            datasetArray.push({
                label: 'zwembad',
                data: [0.50, 1.20, 2.90, 1.30, 1.70, 1.70, 1.70, 2.60, 1.80],
                backgroundColor: [
                    'rgba(0, 0, 0, 0)'
                ],
                borderColor: [
                    'rgba(255, 206, 86, 1)'
                ],
                borderWidth: 3,
                pointBackgroundColor: 'rgba(255, 255, 255, 1)',
                pointBorderColor: 'rgba(255, 206, 86, 1)',
                pointBorderWidth: 2,
                pointRadius: 5,
                pointHoverRadius: 7,
                type: 'line'

            });
            console.log("Pushed dataset 3");
        };
        console.log("Current array: ");
        console.log(datasetArray);

        await sleep(500);
        // Creates the new chart with the specified data
        var chart = new Chart(ctx, {
            type: 'bar',
            options: options,
            data: data
        });

        console.log("Created chart");
        console.log(chart);

        await sleep(1000);
        document.getElementById("checkbox1").disabled = false;
        document.getElementById("checkbox2").disabled = false;
        document.getElementById("checkbox3").disabled = false;

        toggleOverlay();
    };

    // Runs when a checkbox is checked or unchecked
    async function checkboxTrigger(i) {

        var ctx = document.getElementById("chart").getContext("2d");

        console.log(chart);

        toggleOverlay();

        // Disable checkboxes
        document.getElementById("checkbox1").disabled = true;
        document.getElementById("checkbox2").disabled = true;
        document.getElementById("checkbox3").disabled = true;

        console.log(checkedBoxes);

        switch (i) {
            // Checkbox 1
            case 0:
                if (checkedBoxes[0]) {
                    // Checkbox 1 - Unchecked
                    checkedBoxes[0] = false;
                    console.log(checkedBoxes);
                } else {
                    // Checkbox 1 - Checked
                    checkedBoxes[0] = true;
                    console.log(checkedBoxes);
                }
                break;
            case 1:
                if (checkedBoxes[1]) {
                    // Checkbox 1 - Unchecked
                    checkedBoxes[1] = false;
                    console.log(checkedBoxes);
                } else {
                    // Checkbox 1 - Checked
                    checkedBoxes[1] = true;
                    console.log(checkedBoxes);
                }
                break;
            case 2:
                if (checkedBoxes[2]) {
                    // Checkbox 1 - Unchecked
                    checkedBoxes[2] = false;
                    console.log(checkedBoxes);
                } else {
                    // Checkbox 1 - Checked
                    checkedBoxes[2] = true;
                    console.log(checkedBoxes);
                }
                break;
        }

        // Calls the funtion to create a new chart
        await sleep(500);
        // Destroy the old chart
        chart.destroy();
        console.log("Deleted chart");
        createChart();
    };

    document.onload = createChart();
</script>

